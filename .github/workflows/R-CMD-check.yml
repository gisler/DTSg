name: R-CMD-check

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  R-CMD-check:
    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: '3.5.2'}
          - {os: windows-latest, r: 'devel'}
          - {os: macOS-latest, r: 'oldrel'}
          - {os: macOS-latest, r: 'release'}
          - {os: ubuntu-20.04, r: 'oldrel'}
          - {os: ubuntu-20.04, r: 'release'}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    runs-on: ${{ matrix.config.os }}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: true

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          use-public-rspm: true

      - name: Install dependencies (3.5.2)
        if: matrix.config.r == '3.5.2'
        run: |
          install.packages("remotes")
          remotes::install_cran(
            c("checkmate", "data.table", "R6", "dygraphs", "fasttime", "RColorBrewer", "runner", "units", "rcmdcheck"),
            repos = "https://mran.microsoft.com/snapshot/2019-02-01",
            type = "win.binary",
            dependencies = TRUE
          )
          remotes::install_deps(
            dependencies = TRUE,
            type = "win.binary",
            upgrade = "never"
          )
        shell: Rscript {0}

      - name: Check (3.5.2)
        if: matrix.config.r == '3.5.2'
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
          _R_CHECK_FORCE_SUGGESTS_: false
        run: |
          rcmdcheck::rcmdcheck(
            args = c("--no-manual", "--as-cran"),
            build_args = "--no-manual",
            check_dir = "check",
            error_on = "warning"
          )
        shell: Rscript {0}

      - name: Upload check results (3.5.2)
        if: failure() && matrix.config.r == '3.5.2'
        uses: actions/upload-artifact@main
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check

      - name: Install dependencies (all but 3.5.2)
        if: matrix.config.r != '3.5.2'
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck, any::covr
          needs: check, coverage

      - name: Check (all but 3.5.2)
        if: matrix.config.r != '3.5.2'
        uses: r-lib/actions/check-r-package@v2

      - name: Test coverage
        if: success() && runner.os == 'Linux' && matrix.config.r == 'release'
        run: covr::codecov(type = "all")
        shell: Rscript {0}
