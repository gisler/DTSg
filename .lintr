linters: list(
    # object_usage_linter = object_usage_linter,
    absolute_path_linter = absolute_path_linter(),
    # nonportable_path_linter = nonportable_path_linter(),
    pipe_continuation_linter = pipe_continuation_linter,
    assignment_linter = assignment_linter,
    # camel_case_linter = camel_case_linter,
    closed_curly_linter = closed_curly_linter(),
    # commas_linter = commas_linter,
    commented_code_linter = commented_code_linter,
    cyclocomp_linter = cyclocomp_linter(),
    equals_na_linter = equals_na_linter,
    # extraction_operator_linter = extraction_operator_linter,
    function_left_parentheses_linter = function_left_parentheses_linter,
    # implicit_integer_linter = implicit_integer_linter,
    infix_spaces_linter = infix_spaces_linter,
    # line_length_linter = line_length_linter(),
    no_tab_linter = no_tab_linter,
    object_length_linter = object_length_linter(),
    # object_name_linter = object_name_linter(styles = "camelCase"),
    # open_curly_linter = open_curly_linter(),
    paren_brace_linter = paren_brace_linter,
    semicolon_terminator_linter = semicolon_terminator_linter(),
    seq_linter = seq_linter,
    single_quotes_linter = single_quotes_linter,
    # spaces_inside_linter = spaces_inside_linter,
    spaces_left_parentheses_linter = spaces_left_parentheses_linter,
    todo_comment_linter = todo_comment_linter(
      todo = c("todo", "to-do", "to do")
    ),
    trailing_blank_lines_linter = trailing_blank_lines_linter,
    trailing_whitespace_linter = trailing_whitespace_linter,
    T_and_F_symbol_linter = T_and_F_symbol_linter,
    undesirable_function_linter = undesirable_function_linter(list(
      attach, detach, .libPaths, mapply, options, par, require, sapply, setwd,
      sink, Sys.setenv, Sys.setlocale
    )),
    undesirable_operator_linter = undesirable_operator_linter(),
    unneeded_concatenation_linter = unneeded_concatenation_linter
  )
